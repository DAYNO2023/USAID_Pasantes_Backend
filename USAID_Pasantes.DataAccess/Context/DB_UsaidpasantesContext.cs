// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using USAID_Pasantes.DataAccess;
using USAID_Pasantes.Entities.Entities;

#nullable disable

namespace USAID_Pasantes.DataAccess.Context
{
    public partial class DB_UsaidpasantesContext : DbContext
    {
        public DB_UsaidpasantesContext()
        {
        }

        public DB_UsaidpasantesContext(DbContextOptions<DB_UsaidpasantesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbActividades> tbActividades { get; set; }
        public virtual DbSet<tbActividadesPorOptante> tbActividadesPorOptante { get; set; }
        public virtual DbSet<tbBancos> tbBancos { get; set; }
        public virtual DbSet<tbBeneficios> tbBeneficios { get; set; }
        public virtual DbSet<tbBeneficiosPorOptante> tbBeneficiosPorOptante { get; set; }
        public virtual DbSet<tbCarreraPorFacultadPorRegional> tbCarreraPorFacultadPorRegional { get; set; }
        public virtual DbSet<tbCarreras> tbCarreras { get; set; }
        public virtual DbSet<tbComponentes> tbComponentes { get; set; }
        public virtual DbSet<tbComponentesPorRegionalPorEmpleado> tbComponentesPorRegionalPorEmpleado { get; set; }
        public virtual DbSet<tbCuestionarios> tbCuestionarios { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbDiscusiones> tbDiscusiones { get; set; }
        public virtual DbSet<tbDocumentos> tbDocumentos { get; set; }
        public virtual DbSet<tbDocumentosImagenesPorDiscusion> tbDocumentosImagenesPorDiscusion { get; set; }
        public virtual DbSet<tbDocumentosOptantes> tbDocumentosOptantes { get; set; }
        public virtual DbSet<tbDocumentosProyectos> tbDocumentosProyectos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEmpleadosPorActividad> tbEmpleadosPorActividad { get; set; }
        public virtual DbSet<tbEmpresas> tbEmpresas { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFacultadPorRegional> tbFacultadPorRegional { get; set; }
        public virtual DbSet<tbFacultades> tbFacultades { get; set; }
        public virtual DbSet<tbForos> tbForos { get; set; }
        public virtual DbSet<tbForosPorActividad> tbForosPorActividad { get; set; }
        public virtual DbSet<tbForosPorEmpleados> tbForosPorEmpleados { get; set; }
        public virtual DbSet<tbHojaTiempo> tbHojaTiempo { get; set; }
        public virtual DbSet<tbHojaTiempoPorOptante> tbHojaTiempoPorOptante { get; set; }
        public virtual DbSet<tbHojaTiempoPorOptanteBitacora> tbHojaTiempoPorOptanteBitacora { get; set; }
        public virtual DbSet<tbModulos> tbModulos { get; set; }
        public virtual DbSet<tbModulosPorRoles> tbModulosPorRoles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbNotificaciones> tbNotificaciones { get; set; }
        public virtual DbSet<tbNotificacionesPorUsuario> tbNotificacionesPorUsuario { get; set; }
        public virtual DbSet<tbOpcionesPorPregunta> tbOpcionesPorPregunta { get; set; }
        public virtual DbSet<tbOptantes> tbOptantes { get; set; }
        public virtual DbSet<tbOptantesBitacora> tbOptantesBitacora { get; set; }
        public virtual DbSet<tbPreguntasFrecuentes> tbPreguntasFrecuentes { get; set; }
        public virtual DbSet<tbPreguntasPorCuestionario> tbPreguntasPorCuestionario { get; set; }
        public virtual DbSet<tbProyectos> tbProyectos { get; set; }
        public virtual DbSet<tbPuestos> tbPuestos { get; set; }
        public virtual DbSet<tbRecibos> tbRecibos { get; set; }
        public virtual DbSet<tbRecibosPorOptante> tbRecibosPorOptante { get; set; }
        public virtual DbSet<tbRegionalCorporativa> tbRegionalCorporativa { get; set; }
        public virtual DbSet<tbRegionales> tbRegionales { get; set; }
        public virtual DbSet<tbRespuestasPorOptante> tbRespuestasPorOptante { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbTipoDocumento> tbTipoDocumento { get; set; }
        public virtual DbSet<tbTipoSangre> tbTipoSangre { get; set; }
        public virtual DbSet<tbTokens> tbTokens { get; set; }
        public virtual DbSet<tbUniversidades> tbUniversidades { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbActividades>(entity =>
            {
                entity.HasKey(e => e.acti_Id)
                    .HasName("PK__tbActivi__9B1042C3AD6B5218");

                entity.ToTable("tbActividades", "Gest");

                entity.Property(e => e.acti_DescripcionActividad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.acti_DireccionExacta)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.acti_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.acti_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.acti_FechaFinal).HasColumnType("date");

                entity.Property(e => e.acti_FechaInicio).HasColumnType("date");

                entity.Property(e => e.acti_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.acti_NombreActividad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.acti_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbActividadesacti_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.acti_UsuarioCreacion)
                    .HasConstraintName("FK_tbActividades_Accs_tbUsuarios_acti_UsuarioCreacion");

                entity.HasOne(d => d.acti_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbActividadesacti_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.acti_UsuarioModificacion)
                    .HasConstraintName("FK_tbActividades_Accs_tbUsuarios_acti_UsuarioModificacion");

                entity.HasOne(d => d.comp)
                    .WithMany(p => p.tbActividades)
                    .HasForeignKey(d => d.comp_Id);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbActividades)
                    .HasForeignKey(d => d.muni_Id)
                    .HasConstraintName("FK_tbActividades_Gral_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbActividadesPorOptante>(entity =>
            {
                entity.HasKey(e => e.acpe_Id)
                    .HasName("PK__tbActivi__8F690CFF17883CFA");

                entity.ToTable("tbActividadesPorOptante", "Gest");

                entity.Property(e => e.acpe_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.acpe_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.acpe_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.acpe_Observacion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.HasOne(d => d.acpe_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbActividadesPorOptanteacpe_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.acpe_UsuarioCreacion)
                    .HasConstraintName("FK_tbActividadPorOptante_Accs_tbUsuarios_acpe_UsuarioCreacion");

                entity.HasOne(d => d.acpe_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbActividadesPorOptanteacpe_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.acpe_UsuarioModificacion)
                    .HasConstraintName("FK_tbActividadPorOptante_Accs_tbUsuarios_acpe_UsuarioModificacion");

                entity.HasOne(d => d.acti)
                    .WithMany(p => p.tbActividadesPorOptante)
                    .HasForeignKey(d => d.acti_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbActividadPorOptante_tbActividades_acti_Id");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbActividadesPorOptante)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbActividadPorOptante_tbOptantes_opta_Id");
            });

            modelBuilder.Entity<tbBancos>(entity =>
            {
                entity.HasKey(e => e.banc_Id);

                entity.ToTable("tbBancos", "Gral");

                entity.HasIndex(e => e.banc_Descripcion, "UQ_banc_Descripcion")
                    .IsUnique();

                entity.Property(e => e.banc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.banc_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.banc_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.banc_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbBancosbanc_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.banc_UsuarioCreacion)
                    .HasConstraintName("FK_tbBancos_Accs_tbUsuarios_banc_UsuarioCreacion");

                entity.HasOne(d => d.banc_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbBancosbanc_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.banc_UsuarioModificacion)
                    .HasConstraintName("FK_tbBancos_Accs_tbUsuarios_banc_UsuarioModificacion");
            });

            modelBuilder.Entity<tbBeneficios>(entity =>
            {
                entity.HasKey(e => e.bene_Id)
                    .HasName("PK__tbBenefi__3DC63B52652D42A6");

                entity.ToTable("tbBeneficios", "Gest");

                entity.Property(e => e.bene_Cantidad).HasColumnType("money");

                entity.Property(e => e.bene_DescripcionBeneficio)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.bene_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.bene_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.bene_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.bene_NombreBeneficio)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.bene_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbBeneficiosbene_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.bene_UsuarioCreacion)
                    .HasConstraintName("FK_tbBeneficios_Accs_tbUsuarios_bene_UsuarioCreacion");

                entity.HasOne(d => d.bene_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbBeneficiosbene_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.bene_UsuarioModificacion)
                    .HasConstraintName("FK_tbBeneficios_Accs_tbUsuarios_bene_UsuarioModificacion");
            });

            modelBuilder.Entity<tbBeneficiosPorOptante>(entity =>
            {
                entity.HasKey(e => e.bepe_Id)
                    .HasName("PK__tbBenefi__F99C73D6AF0638F6");

                entity.ToTable("tbBeneficiosPorOptante", "Gest");

                entity.HasOne(d => d.bene)
                    .WithMany(p => p.tbBeneficiosPorOptante)
                    .HasForeignKey(d => d.bene_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbBeneficioPorOptante_tbBeneficios_bene_Id");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbBeneficiosPorOptante)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbBeneficioPorOptante_tbOptantes_opta_Id");
            });

            modelBuilder.Entity<tbCarreraPorFacultadPorRegional>(entity =>
            {
                entity.HasKey(e => e.cafr_Id)
                    .HasName("PK__tbCarrer__8AA093B4BE67C4F4");

                entity.ToTable("tbCarreraPorFacultadPorRegional", "Gral");

                entity.Property(e => e.cafr_DescripcionCarreraEspecifico)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.carr)
                    .WithMany(p => p.tbCarreraPorFacultadPorRegional)
                    .HasForeignKey(d => d.carr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbCarreraPorFaculatadPorReginal_tbCarreras_carr_Id");

                entity.HasOne(d => d.fare)
                    .WithMany(p => p.tbCarreraPorFacultadPorRegional)
                    .HasForeignKey(d => d.fare_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbCarreraPorFaculatadPorReginal_tbFacultadPorRegional_fare_Id");
            });

            modelBuilder.Entity<tbCarreras>(entity =>
            {
                entity.HasKey(e => e.carr_Id)
                    .HasName("PK__tbCarrer__7ED01DB18E2AF83F");

                entity.ToTable("tbCarreras", "Gral");

                entity.HasIndex(e => e.carr_DescripcionCarrera, "UQ__tbCarrer__C7EE739B9767C6B9")
                    .IsUnique();

                entity.Property(e => e.carr_DescripcionCarrera)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.carr_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.carr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.carr_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.carr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCarrerascarr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.carr_UsuarioCreacion)
                    .HasConstraintName("FK_tbCarreras_Accs_tbUsuarios_carr_UsuarioCreacion");

                entity.HasOne(d => d.carr_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCarrerascarr_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.carr_UsuarioModificacion)
                    .HasConstraintName("FK_tbCarreras_Accs_tbUsuarios_carr_UsuarioModificacion");
            });

            modelBuilder.Entity<tbComponentes>(entity =>
            {
                entity.HasKey(e => e.comp_Id)
                    .HasName("PK__tbCompon__531157F598460F30");

                entity.ToTable("tbComponentes", "Gest");

                entity.HasIndex(e => e.comp_NombreComponente, "UQ__tbCompon__918F2BC481C11832")
                    .IsUnique();

                entity.Property(e => e.comp_DescripcionComponente)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.comp_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.comp_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.comp_FechaFin).HasColumnType("date");

                entity.Property(e => e.comp_FechaInicio).HasColumnType("date");

                entity.Property(e => e.comp_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.comp_NombreComponente)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.comp_Observacion).IsUnicode(false);

                entity.HasOne(d => d.comp_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbComponentescomp_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.comp_UsuarioCreacion)
                    .HasConstraintName("FK_tbComponentes_Accs_tbUsuarios_comp_UsuarioCreacion");

                entity.HasOne(d => d.comp_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbComponentescomp_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.comp_UsuarioModificacion)
                    .HasConstraintName("FK_tbComponentes_Accs_tbUsuarios_comp_UsuarioModificacion");

                entity.HasOne(d => d.pryt)
                    .WithMany(p => p.tbComponentes)
                    .HasForeignKey(d => d.pryt_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbComponentesPorRegionalPorEmpleado>(entity =>
            {
                entity.HasKey(e => e.core_Id)
                    .HasName("PK__tbCompon__5268D43D2E5F987B");

                entity.ToTable("tbComponentesPorRegionalPorEmpleado", "Gest");

                entity.HasOne(d => d.comp)
                    .WithMany(p => p.tbComponentesPorRegionalPorEmpleado)
                    .HasForeignKey(d => d.comp_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbComponentesPorRegional_Gest_tbComponentes_comp_Id");

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbComponentesPorRegionalPorEmpleado)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbComponentesPorRegional_Gral_tbEmpleados_empl_Id");

                entity.HasOne(d => d.reco)
                    .WithMany(p => p.tbComponentesPorRegionalPorEmpleado)
                    .HasForeignKey(d => d.reco_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbComponentesPorRegional_Gral_tbRegionalCorporativa_reco_Id");
            });

            modelBuilder.Entity<tbCuestionarios>(entity =>
            {
                entity.HasKey(e => e.cues_Id)
                    .HasName("PK__tbCuesti__030166244F729E86");

                entity.ToTable("tbCuestionarios", "Gest");

                entity.Property(e => e.cues_DescripcionCuestionario)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.cues_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cues_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.cues_FechaHoraProgramado).HasColumnType("datetime");

                entity.Property(e => e.cues_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cues_NombreCuestionario)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.cues_Puntuacion).HasColumnType("decimal(2, 1)");

                entity.HasOne(d => d.cues_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCuestionarioscues_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.cues_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbCuestionarios_Accs_tbUsuarios_cues_UsuarioCreacion");

                entity.HasOne(d => d.cues_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCuestionarioscues_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.cues_UsuarioModificacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbCuestionarios_Accs_tbUsuarios_cues_UsuarioModificacion");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.depa_Id)
                    .HasName("PK__tbDepart__E3F3B11E0F4E34BD");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.HasIndex(e => e.depa_DescripcionDepartamento, "UQ__tbDepart__EED74EF8DCF891DF")
                    .IsUnique();

                entity.HasIndex(e => e.depa_DescripcionDepartamento, "UQ_depa_DescripcionDepartamento")
                    .IsUnique();

                entity.Property(e => e.depa_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.depa_DescripcionDepartamento)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.depa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.depa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.depa_UsuarioCreacion)
                    .HasConstraintName("FK_tbDepartamentos_Accs_tbUsuarios_depa_UsuarioCreacion");

                entity.HasOne(d => d.depa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.depa_UsuarioModificacion)
                    .HasConstraintName("FK_tbDepartamentos_Accs_tbUsuarios_depa_UsuarioModificacion");
            });

            modelBuilder.Entity<tbDiscusiones>(entity =>
            {
                entity.HasKey(e => e.disc_Id)
                    .HasName("PK__tbDiscus__0AC3326B27F0BF58");

                entity.ToTable("tbDiscusiones", "Comn");

                entity.Property(e => e.disc_Asunto)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.disc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.disc_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.disc_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.disc_Horas).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.disc_Mensaje)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.disc_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDiscusionesdisc_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.disc_UsuarioCreacion)
                    .HasConstraintName("FK_tbDiscusiones_Accs_tbUsuarios_disc_UsuarioCreacion");

                entity.HasOne(d => d.disc_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDiscusionesdisc_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.disc_UsuarioModificacion)
                    .HasConstraintName("FK_tbDiscusiones_Accs_tbUsuarios_disc_UsuarioModificacion");
            });

            modelBuilder.Entity<tbDocumentos>(entity =>
            {
                entity.HasKey(e => e.docu_Id)
                    .HasName("PK__tbDocume__7C2F03F8BA7574B0");

                entity.ToTable("tbDocumentos", "Gest");

                entity.HasIndex(e => e.docu_Descripcion, "UQ__tbDocume__9055BBD41CAF4DF0")
                    .IsUnique();

                entity.Property(e => e.docu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.docu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.docu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.docu_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.docu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDocumentosdocu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.docu_UsuarioCreacion)
                    .HasConstraintName("FK_tbDocumentos_Accs_tbUsuarios_docu_UsuarioCreacion");

                entity.HasOne(d => d.docu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDocumentosdocu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.docu_UsuarioModificacion)
                    .HasConstraintName("FK_tbDocumentos_Accs_tbUsuarios_docu_UsuarioModificacion");

                entity.HasOne(d => d.tido)
                    .WithMany(p => p.tbDocumentos)
                    .HasForeignKey(d => d.tido_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbDocumentos_Gral_tbTipoDocumento_tido_Id");
            });

            modelBuilder.Entity<tbDocumentosImagenesPorDiscusion>(entity =>
            {
                entity.HasKey(e => e.didi_Id)
                    .HasName("PK__tbDocume__589485ABEED73160");

                entity.ToTable("tbDocumentosImagenesPorDiscusion", "Comn");

                entity.Property(e => e.didi_DocumentoOImagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.disc)
                    .WithMany(p => p.tbDocumentosImagenesPorDiscusion)
                    .HasForeignKey(d => d.disc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbDocumentosOptantes>(entity =>
            {
                entity.HasKey(e => e.doop_Id)
                    .HasName("PK__tbDocume__093F6F16A10E2932");

                entity.ToTable("tbDocumentosOptantes", "Gest");

                entity.HasIndex(e => e.doop_Descripcion, "UQ__tbDocume__E25017672BD1A582")
                    .IsUnique();

                entity.Property(e => e.doop_Descripcion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.doop_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.doop_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.doop_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.doop_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDocumentosOptantesdoop_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.doop_UsuarioCreacion)
                    .HasConstraintName("FK_tbDocumentosOptantes_Accs_tbUsuarios_doop_UsuarioCreacion");

                entity.HasOne(d => d.doop_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDocumentosOptantesdoop_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.doop_UsuarioModificacion)
                    .HasConstraintName("FK_tbDocumentosOptantes_Accs_tbUsuarios_doop_UsuarioModificacion");

                entity.HasOne(d => d.dopr)
                    .WithMany(p => p.tbDocumentosOptantes)
                    .HasForeignKey(d => d.dopr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbDocumentosProyectos_tbDocumentosOptantes_dopr_Id");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbDocumentosOptantes)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbDocumentosProyectos>(entity =>
            {
                entity.HasKey(e => e.dopr_Id)
                    .HasName("PK__tbDocume__23E43FFE8B733281");

                entity.ToTable("tbDocumentosProyectos", "Gest");

                entity.Property(e => e.dopr_Descripcion)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.dopr_Documento)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.dopr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.dopr_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.dopr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDocumentosProyectosdopr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.dopr_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbDocumentosProyectos_Accs_tbUsuarios_doem_UsuarioCreacion");

                entity.HasOne(d => d.dopr_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDocumentosProyectosdopr_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.dopr_UsuarioModificacion)
                    .HasConstraintName("FK_tbDocumentosProyectos_Accs_tbUsuarios_doem_UsuarioModificacion");

                entity.HasOne(d => d.pryt)
                    .WithMany(p => p.tbDocumentosProyectos)
                    .HasForeignKey(d => d.pryt_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbDocumentosProyectos_tbProyecto_pryt_Id");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empl_Id)
                    .HasName("PK__tbEmplea__4772AE31151CA207");

                entity.ToTable("tbEmpleados", "Gral");

                entity.HasIndex(e => e.empl_DNI, "UQ_empl_DNI")
                    .IsUnique();

                entity.Property(e => e.empl_Apellidos)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Correo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.empl_DNI)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_Imagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefono)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.civi)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.civi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.empl_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.empl_UsuarioCreacion)
                    .HasConstraintName("FK_tbEmpleados_Accs_tbUsuarios_empl_UsuarioCreacion");

                entity.HasOne(d => d.empl_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosempl_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.empl_UsuarioModificacion)
                    .HasConstraintName("FK_tbEmpleados_Accs_tbUsuarios_empl_UsuarioModificacion");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.pust)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.pust_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.tisa)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.tisa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbEmpleadosPorActividad>(entity =>
            {
                entity.HasKey(e => e.emac_Id)
                    .HasName("PK__tbEmplea__BCCA90A48A839F2F");

                entity.ToTable("tbEmpleadosPorActividad", "Gest");

                entity.HasOne(d => d.acti)
                    .WithMany(p => p.tbEmpleadosPorActividad)
                    .HasForeignKey(d => d.acti_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbEmpleadosPorActividad)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbEmpleadosPorActividad_Gral_tbEmpleados_empl_Id");
            });

            modelBuilder.Entity<tbEmpresas>(entity =>
            {
                entity.HasKey(e => e.empr_Id)
                    .HasName("PK__tbEmpres__7D468F0B69F083C0");

                entity.ToTable("tbEmpresas", "Gest");

                entity.HasIndex(e => e.empr_Siglas, "UQ__tbEmpres__182F21D73DCE6C28")
                    .IsUnique();

                entity.HasIndex(e => e.empr_DescripcionEmpresa, "UQ__tbEmpres__DF23A0AC236CB952")
                    .IsUnique();

                entity.Property(e => e.empr_DescripcionEmpresa)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.empr_DireccionExacta)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.empr_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.empr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empr_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empr_Logo)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.empr_Siglas)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.empr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEmpresasempr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.empr_UsuarioCreacion)
                    .HasConstraintName("FK_tbEmpresas_Accs_tbUsuarios_empr_UsuarioCreacion");

                entity.HasOne(d => d.empr_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEmpresasempr_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.empr_UsuarioModificacion)
                    .HasConstraintName("FK_tbEmpresas_Accs_tbUsuarios_empr_UsuarioModificacion");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpresas)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbEmpresas_Gral_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.civi_Id)
                    .HasName("PK__tbEstado__748BC9DCEE517576");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.HasIndex(e => e.civi_DescripcionEstadoCivil, "UQ__tbEstado__2DAB6DA82038D3F7")
                    .IsUnique();

                entity.Property(e => e.civi_DescripcionEstadoCivil)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.civi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.civi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.civi_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.civi_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilescivi_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.civi_UsuarioCreacion)
                    .HasConstraintName("FK_tbEstadosCiviles_Accs_tbUsuarios_civi_UsuarioCreacion");

                entity.HasOne(d => d.civi_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivilescivi_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.civi_UsuarioModificacion)
                    .HasConstraintName("FK_tbEstadosCiviles_Accs_tbUsuarios_civi_UsuarioModificacion");
            });

            modelBuilder.Entity<tbFacultadPorRegional>(entity =>
            {
                entity.HasKey(e => e.fare_Id)
                    .HasName("PK__tbFacult__8E0B3BB5DB9E90EC");

                entity.ToTable("tbFacultadPorRegional", "Gral");

                entity.HasOne(d => d.facu)
                    .WithMany(p => p.tbFacultadPorRegional)
                    .HasForeignKey(d => d.facu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.regi)
                    .WithMany(p => p.tbFacultadPorRegional)
                    .HasForeignKey(d => d.regi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbFacultades>(entity =>
            {
                entity.HasKey(e => e.facu_Id)
                    .HasName("PK__tbFacult__28EB0480C348E7DA");

                entity.ToTable("tbFacultades", "Gral");

                entity.HasIndex(e => e.facu_DesripcionFacultad, "UQ_tbFacultades_facu_DesripcionFacultad")
                    .IsUnique();

                entity.Property(e => e.facu_DesripcionFacultad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.facu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.facu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.facu_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.facu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbFacultadesfacu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.facu_UsuarioCreacion)
                    .HasConstraintName("FK_tbFacultades_Accs_tbUsuarios_facu_UsuarioCreacion");

                entity.HasOne(d => d.facu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbFacultadesfacu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.facu_UsuarioModificacion)
                    .HasConstraintName("FK_tbFacultades_Accs_tbUsuarios_facu_UsuarioModificacion");
            });

            modelBuilder.Entity<tbForos>(entity =>
            {
                entity.HasKey(e => e.foro_Id)
                    .HasName("PK__tbForos__6C73713F0E4F8A77");

                entity.ToTable("tbForos", "Comn");

                entity.Property(e => e.foro_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.foro_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.foro_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.foro_Titulo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.foro_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbForosforo_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.foro_UsuarioCreacion)
                    .HasConstraintName("FK_tbForos_Accs_tbUsuarios_foro_UsuarioCreacion");

                entity.HasOne(d => d.foro_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbForosforo_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.foro_UsuarioModificacion)
                    .HasConstraintName("FK_tbForos_Accs_tbUsuarios_foro_UsuarioModificacion");
            });

            modelBuilder.Entity<tbForosPorActividad>(entity =>
            {
                entity.HasKey(e => e.foac_Id)
                    .HasName("PK__tbForosP__02075A0B75F42DF8");

                entity.ToTable("tbForosPorActividad", "Comn");

                entity.Property(e => e.foac_Descripcion)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.foac_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.foac_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.foac_FechaHoraProgramado).HasColumnType("datetime");

                entity.Property(e => e.foac_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.acti)
                    .WithMany(p => p.tbForosPorActividad)
                    .HasForeignKey(d => d.acti_Id);

                entity.HasOne(d => d.comp)
                    .WithMany(p => p.tbForosPorActividad)
                    .HasForeignKey(d => d.comp_Id)
                    .HasConstraintName("FK_tbForosPorActividad_Gest_tbComponentes_comp_Id");

                entity.HasOne(d => d.foac_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbForosPorActividadfoac_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.foac_UsuarioCreacion)
                    .HasConstraintName("FK_tbForosPorActividad_Accs_tbUsuarios_foac_UsuarioCreacion");

                entity.HasOne(d => d.foac_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbForosPorActividadfoac_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.foac_UsuarioModificacion)
                    .HasConstraintName("FK_tbForosPorActividad_Accs_tbUsuarios_foac_UsuarioModificacion");

                entity.HasOne(d => d.foro)
                    .WithMany(p => p.tbForosPorActividad)
                    .HasForeignKey(d => d.foro_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbForosPorEmpleados>(entity =>
            {
                entity.HasKey(e => e.foem_Id);

                entity.ToTable("tbForosPorEmpleados", "Comn");

                entity.Property(e => e.foem_Descripcion)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.foem_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.foem_FechaHoraProgramado).HasColumnType("datetime");

                entity.Property(e => e.foem_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.foem_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbForosPorEmpleadosfoem_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.foem_UsuarioCreacion)
                    .HasConstraintName("FK_tbForosPorEmpleados_Accs_tbUsuarios_foem_UsuarioCreacion");

                entity.HasOne(d => d.foem_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbForosPorEmpleadosfoem_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.foem_UsuarioModificacion)
                    .HasConstraintName("FK_tbForosPorEmpleados_Accs_tbUsuarios_foem_UsuarioModificacion");

                entity.HasOne(d => d.foro)
                    .WithMany(p => p.tbForosPorEmpleados)
                    .HasForeignKey(d => d.foro_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbHojaTiempo>(entity =>
            {
                entity.HasKey(e => e.hoti_Id)
                    .HasName("PK__tbHojaTi__3277BDB04EFFB62B");

                entity.ToTable("tbHojaTiempo", "Gest");

                entity.Property(e => e.hoti_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.hoti_FechaHoraEntregaLimite).HasColumnType("datetime");

                entity.Property(e => e.hoti_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.hoti_PeriodoFinal).HasColumnType("date");

                entity.Property(e => e.hoti_PeriodoInicio).HasColumnType("date");

                entity.HasOne(d => d.comp)
                    .WithMany(p => p.tbHojaTiempo)
                    .HasForeignKey(d => d.comp_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbHojaTiempo_Gest_tbComponentes_comp_Id");

                entity.HasOne(d => d.hoti_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHojaTiempohoti_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.hoti_UsuarioCreacion)
                    .HasConstraintName("FK_tbHojaTiempo_Accs_tbUsuarios_hoti_UsuarioCreacion");

                entity.HasOne(d => d.hoti_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbHojaTiempohoti_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.hoti_UsuarioModificacion)
                    .HasConstraintName("FK_tbHojaTiempo_Accs_tbUsuarios_hoti_UsuarioModificacion");
            });

            modelBuilder.Entity<tbHojaTiempoPorOptante>(entity =>
            {
                entity.HasKey(e => e.hoto_Id)
                    .HasName("PK__tbHojaTi__62F07577705BC180");

                entity.ToTable("tbHojaTiempoPorOptante", "Gest");

                entity.Property(e => e.hoto_Comentario)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.hoto_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.hoto_FechaHoraEntrega).HasColumnType("datetime");

                entity.Property(e => e.hoto_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.hoto_HorasTotalesRealizadas).HasColumnType("decimal(18, 0)");

                entity.HasOne(d => d.hoti)
                    .WithMany(p => p.tbHojaTiempoPorOptante)
                    .HasForeignKey(d => d.hoti_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbHojaTiempoPorOptante_Gest_tbHojaTiempo_hoti_Id");

                entity.HasOne(d => d.hoto_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbHojaTiempoPorOptantehoto_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.hoto_UsuarioCreacion)
                    .HasConstraintName("FK_tbHojaTiempoPorOptante_Accs_tbUsuarios_hoto_UsuarioCreacion");

                entity.HasOne(d => d.hoto_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbHojaTiempoPorOptantehoto_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.hoto_UsuarioModificacion)
                    .HasConstraintName("FK_tbHojaTiempoPorOptante_Accs_tbUsuarios_hoto_UsuarioModificacion");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbHojaTiempoPorOptante)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbHojaTiempoPorOptante_Gest_tbOptantes_opta_Id");
            });

            modelBuilder.Entity<tbHojaTiempoPorOptanteBitacora>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbHojaTiempoPorOptanteBitacora", "Gest");

                entity.Property(e => e.hoto_Accion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.hoto_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.hoto_FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.hoto_FechaHoraEntrega).HasColumnType("datetime");

                entity.Property(e => e.hoto_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.hoto_HorasTotalesRealizadas).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.oto_Comentario)
                    .HasMaxLength(250)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbModulos>(entity =>
            {
                entity.HasKey(e => e.modu_Id)
                    .HasName("PK__tbModulo__6F3FB45DA2109B01");

                entity.ToTable("tbModulos", "Accs");

                entity.HasIndex(e => e.modu_UrlModulo, "UQ__tbModulo__3061E23DA7E88771")
                    .IsUnique();

                entity.HasIndex(e => e.modu_DescripcionModulo, "UQ__tbModulo__846D0391369F2D2B")
                    .IsUnique();

                entity.HasIndex(e => e.modu_DescripcionModulo, "UQ_tbModulos_modu_DescripcionModulo")
                    .IsUnique();

                entity.Property(e => e.modu_Categoria)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.modu_DescripcionModulo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.modu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.modu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.modu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.modu_Subcategoria)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.modu_Titulo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.modu_UrlModulo)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.modu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbModulosmodu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.modu_UsuarioCreacion)
                    .HasConstraintName("FK_tbModulos_Accs_tbUsuarios_modu_UsuarioCreacion");

                entity.HasOne(d => d.modu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbModulosmodu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.modu_UsuarioModificacion)
                    .HasConstraintName("FK_tbModulos_Accs_tbUsuarios_modu_UsuarioModificacion");
            });

            modelBuilder.Entity<tbModulosPorRoles>(entity =>
            {
                entity.HasKey(e => e.moro_Id)
                    .HasName("PK__tbModulo__FB7C532B738D1034");

                entity.ToTable("tbModulosPorRoles", "Accs");

                entity.HasOne(d => d.modu)
                    .WithMany(p => p.tbModulosPorRoles)
                    .HasForeignKey(d => d.modu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbModulosPorRoles)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "Gral");

                entity.HasIndex(e => e.muni_DescripcionMunicipio, "UQ__tbMunici__34A349564A3D2700")
                    .IsUnique();

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.muni_DescripcionMunicipio)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.depa)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.depa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.muni_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.muni_UsuarioCreacion)
                    .HasConstraintName("FK_tbMunicipios_Accs_tbUsuarios_muni_UsuarioCreacion");

                entity.HasOne(d => d.muni_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.muni_UsuarioModificacion)
                    .HasConstraintName("FK_tbMunicipios_Accs_tbUsuarios_muni_UsuarioModificacion");
            });

            modelBuilder.Entity<tbNotificaciones>(entity =>
            {
                entity.HasKey(e => e.noti_Id);

                entity.ToTable("tbNotificaciones", "Comn");

                entity.Property(e => e.noti_Descripcion)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.noti_Fecha).HasColumnType("datetime");

                entity.Property(e => e.noti_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.noti_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.noti_Ruta)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.noti_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbNotificacionesnoti_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.noti_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbNotificaciones_Accs_tbUsuarios_noti_UsuarioCreacion");

                entity.HasOne(d => d.noti_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbNotificacionesnoti_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.noti_UsuarioModificacion)
                    .HasConstraintName("FK_tbNotificaciones_Accs_tbUsuarios_noti_UsuarioModificacion");
            });

            modelBuilder.Entity<tbNotificacionesPorUsuario>(entity =>
            {
                entity.HasKey(e => e.napu_Id);

                entity.ToTable("tbNotificacionesPorUsuario", "Comn");

                entity.Property(e => e.napu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.napu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.napu_Ruta)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.napu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbNotificacionesPorUsuarionapu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.napu_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbNotificacionesPorUsuario_Accs_tbUsuarios_napu_UsuarioCreacion");

                entity.HasOne(d => d.napu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbNotificacionesPorUsuarionapu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.napu_UsuarioModificacion)
                    .HasConstraintName("FK_tbNotificacionesPorUsuario_Accs_tbUsuarios_napu_UsuarioModificacion");

                entity.HasOne(d => d.usua)
                    .WithMany(p => p.tbNotificacionesPorUsuariousua)
                    .HasForeignKey(d => d.usua_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbNotificacionesPorUsuario_Accs_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbOpcionesPorPregunta>(entity =>
            {
                entity.HasKey(e => e.oppr_Id)
                    .HasName("PK__tbOpcion__32A5707FE194FF8D");

                entity.ToTable("tbOpcionesPorPregunta", "Gest");

                entity.Property(e => e.oppr_NombreOpcion)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.prcu)
                    .WithMany(p => p.tbOpcionesPorPregunta)
                    .HasForeignKey(d => d.prcu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbOptantes>(entity =>
            {
                entity.HasKey(e => e.opta_Id)
                    .HasName("PK__tbOptant__791B3329B02BB7FE");

                entity.ToTable("tbOptantes", "Gest");

                entity.HasIndex(e => e.opta_DNI, "UQ__tbOptant__659E8FD0D910C988")
                    .IsUnique();

                entity.HasIndex(e => e.opta_CorreoElectronico, "UQ__tbOptant__EE5007D46B9DBF17")
                    .IsUnique();

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Apellidos)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.opta_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.opta_CuentaBancaria)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.opta_DNI)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Direccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.opta_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.opta_FechaFin).HasColumnType("date");

                entity.Property(e => e.opta_FechaInicio).HasColumnType("date");

                entity.Property(e => e.opta_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.opta_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.opta_Imagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.opta_Nombres)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Observacion).IsUnicode(false);

                entity.Property(e => e.opta_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Telefono1)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Telefono2)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.HasOne(d => d.banc)
                    .WithMany(p => p.tbOptantes)
                    .HasForeignKey(d => d.banc_Id)
                    .HasConstraintName("FK_tbOptantes_Gral_tbBancos_banc_Id");

                entity.HasOne(d => d.cafr)
                    .WithMany(p => p.tbOptantes)
                    .HasForeignKey(d => d.cafr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbOptantes_Gral_tbCarreraPorFacultadPorRegional_cafr_Id");

                entity.HasOne(d => d.civi)
                    .WithMany(p => p.tbOptantes)
                    .HasForeignKey(d => d.civi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbOptantes_Gral_tbEstadosCiviles_civi_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbOptantes)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbOptantes_Gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.opta_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbOptantesopta_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.opta_UsuarioCreacion)
                    .HasConstraintName("FK_tbOptantes_Accs_tbUsuarios_opta_UsuarioCreacion");

                entity.HasOne(d => d.opta_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbOptantesopta_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.opta_UsuarioModificacion)
                    .HasConstraintName("FK_tbOptantes_Accs_tbUsuarios_opta_UsuarioModificacion");

                entity.HasOne(d => d.tisa)
                    .WithMany(p => p.tbOptantes)
                    .HasForeignKey(d => d.tisa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbOptantes_Gral_tbTipoSangre_tisa_Id");
            });

            modelBuilder.Entity<tbOptantesBitacora>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("tbOptantesBitacora", "Gest");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Accion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.opta_CorreoElectronico)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.opta_CuentaBancaria)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.opta_DNI)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Direccion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.opta_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.opta_FechaEliminado).HasColumnType("datetime");

                entity.Property(e => e.opta_FechaFin).HasColumnType("date");

                entity.Property(e => e.opta_FechaInicio).HasColumnType("date");

                entity.Property(e => e.opta_Fechamodificacion).HasColumnType("datetime");

                entity.Property(e => e.opta_Imagen).IsUnicode(false);

                entity.Property(e => e.opta_Observacion).IsUnicode(false);

                entity.Property(e => e.opta_PrimerApellido)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.opta_PrimerNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.opta_SegundoApellido)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.opta_SegundoNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Telefono1)
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.opta_Telefono2)
                    .HasMaxLength(9)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbPreguntasFrecuentes>(entity =>
            {
                entity.HasKey(e => e.prfr_Id)
                    .HasName("PK__tbPregun__B5C22C49D4FAE55D");

                entity.ToTable("tbPreguntasFrecuentes", "Comn");

                entity.HasIndex(e => e.prfr_Pregunta, "UQ_tbPreguntasFrecuentes_prfr_Pregunta")
                    .IsUnique();

                entity.Property(e => e.prfr_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.prfr_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.prfr_Pregunta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.prfr_Respuesta)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.prfr_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPreguntasFrecuentesprfr_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.prfr_UsuarioCreacion)
                    .HasConstraintName("FK_tbPreguntasFrecuentes_Accs_tbUsuarios_prfr_UsuarioCreacion");

                entity.HasOne(d => d.prfr_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPreguntasFrecuentesprfr_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.prfr_UsuarioModificacion)
                    .HasConstraintName("FK_tbPreguntasFrecuentes_Accs_tbUsuarios_prfr_UsuarioModificacion");
            });

            modelBuilder.Entity<tbPreguntasPorCuestionario>(entity =>
            {
                entity.HasKey(e => e.prcu_Id)
                    .HasName("PK__tbPregun__32C2967A404E6C4D");

                entity.ToTable("tbPreguntasPorCuestionario", "Gest");

                entity.Property(e => e.prcu_Pregunta)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.prcu_Puntuacion).HasColumnType("decimal(2, 1)");

                entity.HasOne(d => d.cues)
                    .WithMany(p => p.tbPreguntasPorCuestionario)
                    .HasForeignKey(d => d.cues_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbProyectos>(entity =>
            {
                entity.HasKey(e => e.pryt_Id)
                    .HasName("PK__tbProyec__3AB3C03AB5B93CC9");

                entity.ToTable("tbProyectos", "Gest");

                entity.HasIndex(e => e.pryt_DescripcionProyecto, "UQ__tbProyec__7ECE41F76EDD43EA")
                    .IsUnique();

                entity.Property(e => e.pryt_DescripcionProyecto)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.pryt_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pryt_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pryt_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pryt_HorasProceso).HasColumnType("decimal(18, 0)");

                entity.HasOne(d => d.empr)
                    .WithMany(p => p.tbProyectos)
                    .HasForeignKey(d => d.empr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.pryt_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbProyectospryt_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.pryt_UsuarioCreacion)
                    .HasConstraintName("FK_tbProyectos_Accs_tbUsuarios_pryt_UsuarioCreacion");

                entity.HasOne(d => d.pryt_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbProyectospryt_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.pryt_UsuarioModificacion)
                    .HasConstraintName("FK_tbProyectos_Accs_tbUsuarios_pryt_UsuarioModificacion");
            });

            modelBuilder.Entity<tbPuestos>(entity =>
            {
                entity.HasKey(e => e.pust_Id)
                    .HasName("PK__tbPuesto__671B89655FDDB46A");

                entity.ToTable("tbPuestos", "Gral");

                entity.HasIndex(e => e.pust_DescripcionPuesto, "UQ__tbPuesto__927C9349E17D565A")
                    .IsUnique();

                entity.Property(e => e.pust_DescripcionPuesto)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.pust_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pust_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pust_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.pust_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPuestospust_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.pust_UsuarioCreacion)
                    .HasConstraintName("FK_tbPuestos_Accs_tbUsuarios_pust_UsuarioCreacion");

                entity.HasOne(d => d.pust_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPuestospust_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.pust_UsuarioModificacion)
                    .HasConstraintName("FK_tbPuestos_Accs_tbUsuarios_pust_UsuarioModificacion");
            });

            modelBuilder.Entity<tbRecibos>(entity =>
            {
                entity.HasKey(e => e.reci_Id)
                    .HasName("PK__tbRecibo__50EBEE7EC10E9DF5");

                entity.ToTable("tbRecibos", "Gest");

                entity.Property(e => e.reci_Certificacion).IsUnicode(false);

                entity.Property(e => e.reci_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.reci_FechaHoraLimite).HasColumnType("datetime");

                entity.Property(e => e.reci_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.reci_Para)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.reci_PeriodoFinal).HasColumnType("date");

                entity.Property(e => e.reci_PeriodoInicio).HasColumnType("date");

                entity.HasOne(d => d.empl)
                    .WithMany(p => p.tbRecibos)
                    .HasForeignKey(d => d.empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbRecibos_Gral_tbEmpleados_empl_Id");

                entity.HasOne(d => d.reci_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRecibosreci_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.reci_UsuarioCreacion)
                    .HasConstraintName("FK_tbRecibos_Accs_tbUsuarios_reci_UsuarioCreacion");

                entity.HasOne(d => d.reci_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRecibosreci_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.reci_UsuarioModificacion)
                    .HasConstraintName("FK_tbRecibos_Accs_tbUsuarios_reci_UsuarioModificacion");
            });

            modelBuilder.Entity<tbRecibosPorOptante>(entity =>
            {
                entity.HasKey(e => e.reop_Id)
                    .HasName("PK__tbRecibo__16161EE9E210BD4E");

                entity.ToTable("tbRecibosPorOptante", "Gest");

                entity.Property(e => e.reop_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.reop_HorasTotalesRealizadas).HasColumnType("decimal(2, 1)");

                entity.Property(e => e.reop_PrecioUnitario).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.reop_Total).HasColumnType("decimal(6, 2)");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbRecibosPorOptante)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbRecibosPorPasante_tbOptantes_opta_Id");
            });

            modelBuilder.Entity<tbRegionalCorporativa>(entity =>
            {
                entity.HasKey(e => e.reco_Id)
                    .HasName("PK__tbRegion__BA2965898F77D29B");

                entity.ToTable("tbRegionalCorporativa", "Gral");

                entity.HasIndex(e => e.reco_NombreRegionalCorportiva, "UQ_tbRegionalCorporativa_reco_NombreRegionalCorportiva")
                    .IsUnique();

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.reco_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.reco_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.reco_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.reco_NombreRegionalCorportiva)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbRegionalCorporativa)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.reco_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRegionalCorporativareco_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.reco_UsuarioCreacion)
                    .HasConstraintName("FK_tbRegionalCorporativa_Accs_tbUsuarios_reco_UsuarioCreacion");

                entity.HasOne(d => d.reco_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRegionalCorporativareco_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.reco_UsuarioModificacion)
                    .HasConstraintName("FK_tbRegionalCorporativa_Accs_tbUsuarios_UsuarioModificacion");
            });

            modelBuilder.Entity<tbRegionales>(entity =>
            {
                entity.HasKey(e => e.regi_Id)
                    .HasName("PK__tbRegion__3E6FBD3079B8FB14");

                entity.ToTable("tbRegionales", "Gral");

                entity.HasIndex(e => e.regi_Abreviatura, "UQ__tbRegion__B4C8C711BB9CBBE6")
                    .IsUnique();

                entity.HasIndex(e => e.regi_DescripcionRegional, "UQ__tbRegion__EE1F886844309BA4")
                    .IsUnique();

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.regi_Abreviatura)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.regi_DescripcionRegional)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.regi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.regi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.regi_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbRegionales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.regi_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRegionalesregi_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.regi_UsuarioCreacion)
                    .HasConstraintName("FK_tbRegionales_Accs_tbUsuarios_regi_UsuarioCreacion");

                entity.HasOne(d => d.regi_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRegionalesregi_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.regi_UsuarioModificacion)
                    .HasConstraintName("FK_tbRegionales_Accs_tbUsuarios_regi_UsuarioModificacion");

                entity.HasOne(d => d.univ)
                    .WithMany(p => p.tbRegionales)
                    .HasForeignKey(d => d.univ_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbRespuestasPorOptante>(entity =>
            {
                entity.HasKey(e => e.cupa_Id)
                    .HasName("PK__tbRespue__3D4003BC0D4A0D21");

                entity.ToTable("tbRespuestasPorOptante", "Gest");

                entity.Property(e => e.cupa_FechaRealizado).HasColumnType("datetime");

                entity.Property(e => e.cupa_respuesta).IsUnicode(false);

                entity.HasOne(d => d.oppr)
                    .WithMany(p => p.tbRespuestasPorOptante)
                    .HasForeignKey(d => d.oppr_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbRespuestasPorPasante_tbOpcionesPorPregunta_oppr_Id");

                entity.HasOne(d => d.opta)
                    .WithMany(p => p.tbRespuestasPorOptante)
                    .HasForeignKey(d => d.opta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbRespuestasPorPasante_tbOptantes_opta_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK__tbRoles__760F99A4EA2481A1");

                entity.ToTable("tbRoles", "Accs");

                entity.HasIndex(e => e.role_DescripcionRol, "UQ__tbRoles__AC38D9C21860C3A8")
                    .IsUnique();

                entity.HasIndex(e => e.role_DescripcionRol, "UQ_tbRoles_role_DescripcionRol")
                    .IsUnique();

                entity.Property(e => e.role_DescripcionRol)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.role_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesrole_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.role_UsuarioCreacion);

                entity.HasOne(d => d.role_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRolesrole_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.role_UsuarioModificacion);
            });

            modelBuilder.Entity<tbTipoDocumento>(entity =>
            {
                entity.HasKey(e => e.tido_Id)
                    .HasName("PK__tbTipoDo__96BB82D20850804F");

                entity.ToTable("tbTipoDocumento", "Gral");

                entity.HasIndex(e => e.tido_Descripcion, "UQ__tbTipoDo__10806C995A6DB941")
                    .IsUnique();

                entity.Property(e => e.tido_Descripcion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.tido_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.tido_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tido_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.tido_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTipoDocumentotido_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.tido_UsuarioCreacion)
                    .HasConstraintName("FK_tbTipoDocumento_Accs_tbUsuarios_tido_UsuarioCreacion");

                entity.HasOne(d => d.tido_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbTipoDocumentotido_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.tido_UsuarioModificacion)
                    .HasConstraintName("FK_tbTipoDocumento_Accs_tbUsuarios_tido_UsuarioModificacion");
            });

            modelBuilder.Entity<tbTipoSangre>(entity =>
            {
                entity.HasKey(e => e.tisa_Id)
                    .HasName("PK__tbTipoSa__A56FCB2B7A51C404");

                entity.ToTable("tbTipoSangre", "Gral");

                entity.HasIndex(e => e.tisa_Descripcion, "UQ_tbTipoSangre_tisa_Descripcion")
                    .IsUnique();

                entity.Property(e => e.tisa_Descripcion)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.tisa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tisa_Fechamodificacion).HasColumnType("datetime");

                entity.HasOne(d => d.tisa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTipoSangretisa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.tisa_UsuarioCreacion)
                    .HasConstraintName("FK_tbTipoSangre_Accs_tbUsuarios_tisa_UsuarioCreacion");

                entity.HasOne(d => d.tisa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbTipoSangretisa_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.tisa_UsuarioModificacion)
                    .HasConstraintName("FK_tbTipoSangre_Accs_tbUsuarios_tisa_UsuarioModificacion");
            });

            modelBuilder.Entity<tbTokens>(entity =>
            {
                entity.HasKey(e => e.tokn_Id);

                entity.ToTable("tbTokens", "Comn");

                entity.Property(e => e.tokn_JsonToken)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.usua)
                    .WithMany(p => p.tbTokens)
                    .HasForeignKey(d => d.usua_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbTokens_Accs_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbUniversidades>(entity =>
            {
                entity.HasKey(e => e.univ_Id)
                    .HasName("PK__tbUniver__A2187E09605E4449");

                entity.ToTable("tbUniversidades", "Gral");

                entity.HasIndex(e => e.univ_DescripcionUniversidad, "UQ__tbUniver__5983CA8A334C9D0D")
                    .IsUnique();

                entity.HasIndex(e => e.univ_Abreviatura, "UQ__tbUniver__C90F8EAAB2A7DB44")
                    .IsUnique();

                entity.Property(e => e.univ_Abreviatura)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.univ_DescripcionUniversidad)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.univ_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.univ_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.univ_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.univ_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbUniversidadesuniv_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.univ_UsuarioCreacion)
                    .HasConstraintName("FK_tbUniversidades_Accs_tbUsuarios_univ_UsuarioCreacion");

                entity.HasOne(d => d.univ_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbUniversidadesuniv_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.univ_UsuarioModificacion)
                    .HasConstraintName("FK_tbUniversidades_Accs_tbUsuarios_univ_UsuarioModificacion");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usua_Id)
                    .HasName("PK__tbUsuari__E863C8EE50DC118D");

                entity.ToTable("tbUsuarios", "Accs");

                entity.HasIndex(e => e.usua_Usuario, "UQ__tbUsuari__9ED44AB45D2A9E8B")
                    .IsUnique();

                entity.HasIndex(e => e.usua_Usuario, "UQ_usua_Usuario")
                    .IsUnique();

                entity.Property(e => e.usua_Clave)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_Usuario)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.Inverseusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .HasConstraintName("FK_tbUsuarios_usua_UsuarioCreacion");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.Inverseusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_tbUsuarios_usua_UsuarioModificacion");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}